{"version":3,"sources":["../static/js/3.eaec9b9c.chunk.js","Hera/comp/bigNumber/BigNumberEditor.js","Hera/comp/bigNumber/BigNumber.js","Hera/comp/bigNumber/BigNumberBlock.js","webpack:///./src/Hera/comp/bigNumber/BigNumberEditor.css?3d8f","Hera/comp/bigNumber/BigNumberEditor.css"],"names":["webpackJsonp","1108","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1__BigNumber__","__WEBPACK_IMPORTED_MODULE_2__BigNumberBlock__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","BigNumberEditor","_Component","this","_this","getPrototypeOf","state","calStore","blockRender","forEach","eachBlockData","index","push","a","createElement","onChange","setState","firNumStr","symbol","secNumStr","firNum","secNum","isValid","add","toString","minus","multiply","divide","parseFloat","className","getBlockRender","getResult","getJsResult","1109","nonNegativeIntReg","bigNumArrReg","Infinity","BigNumber","numStr","__value","trim","match","val","intArr","floatArr","isPositive","getFloatValue","valueStr","getIntValue","timesNum","newNumber","intNum","split","firFloatNum","currFirFloatBit","shift","Math","abs","currFirIntBit","pop","unshift","firLen","setIntValue","join","setFloatValue","setPositive","isMul","firIntStr","secIntStr","firFloatValue","secFloatValue","firFloatLength","secFloatLength","firFloatArr","secFloatArr","magnification","tempFirValue","tempSecValue","secLen","firStr","secStr","numArray","resultLen","intPart","floatPart","slice","len","intLen","j","floatLen","currPos","isBigger","secBigNum","firPositive","secPositive","baseBigger","firIntValue","secIntValue","intLength","floatLength","firBigNum","copyFirNum","copySecNum","result","_baseAdd","_baseMinus","_baseMultiply","leaveBit","isZero","_baseDivide","timesResult","_timesToInt","firIntArr","secIntArr","resultIntArr","firIntLength","secIntLength","isFirLead","shortLen","longLen","longInrArr","carryFlag","firChar","secChar","resultValue","parseInt","currValue","_timesToFloat","oppositeFlag","abdicationFlag","temp","tempLength","tempResultArray","magnificationNum","reverse","oneBitNum","_baseOneBitMultiply","realResult","tempResult","bigNumArray","oneSecBitNum","carryNum","resultArray","oneFirBitNum","currNum","floor","timesValue","tempNum","times","isDivides","_isValidNumStr","test","1110","__WEBPACK_IMPORTED_MODULE_1__BigNumberEditor_css__","BigNumberEditorBlock","refs","input","ref","defaultValue","onBlur","1111","exports","content","options","transform","locals","1112","version","sources","names","mappings","file","sourcesContent","sourceRoot"],"mappings":"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","file":"static/js/3.eaec9b9c.chunk.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 1108:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__BigNumber__ = __webpack_require__(1109);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__BigNumberBlock__ = __webpack_require__(1110);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**\n * Created by edeity on 2018/1/31.\n */var BigNumberEditor=function(_Component){_inherits(BigNumberEditor,_Component);function BigNumberEditor(){_classCallCheck(this,BigNumberEditor);var _this=_possibleConstructorReturn(this,(BigNumberEditor.__proto__||Object.getPrototypeOf(BigNumberEditor)).call(this));_this.state={calStore:['0.1','+','0.2']};return _this;}_createClass(BigNumberEditor,[{key:'getBlockRender',value:function getBlockRender(){var blockRender=[];var self=this;this.state.calStore.forEach(function(eachBlockData,index){blockRender.push(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__BigNumberBlock__[\"a\" /* default */],{key:index,index:index,value:eachBlockData,onChange:function onChange(value,index){var calStore=self.state.calStore;calStore[index]=value;self.setState({calStore:calStore});}}));});return blockRender;}},{key:'getResult',value:function getResult(){var calStore=this.state.calStore;var firNumStr=calStore[0];var symbol=calStore[1];var secNumStr=calStore[2];var firNum=new __WEBPACK_IMPORTED_MODULE_1__BigNumber__[\"a\" /* default */](firNumStr);var secNum=new __WEBPACK_IMPORTED_MODULE_1__BigNumber__[\"a\" /* default */](secNumStr);if(firNum.isValid()&&secNum.isValid()){switch(symbol){case'+':return firNum.add(secNum).toString();case'-':return firNum.minus(secNum).toString();case'*':return firNum.multiply(secNum).toString();case'/':return firNum.divide(secNum).toString();default:return'未知运算符号';}}else{return\"不是合法的数值\";}}},{key:'getJsResult',value:function getJsResult(){var calStore=this.state.calStore;var firNumStr=calStore[0];var symbol=calStore[1];var secNumStr=calStore[2];var firNum=parseFloat(firNumStr);var secNum=parseFloat(secNumStr);switch(symbol){case'+':return firNum+secNum;case'-':return firNum-secNum;case'*':return firNum*secNum;case'/':return firNum/secNum;default:return'未知运算符号，仅支持 +（加）、-（减）、*（乘）、/（除）';}}},{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'editor'},this.getBlockRender(),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'result'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',{className:'desc'},'\\u7C7B\\u5E93'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',{className:'symbol'},'='),' ',this.getResult(),' '),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'result'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',{className:'desc'},'\\u539F\\u751F'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',{className:'symbol'},'='),' ',this.getJsResult()));}}]);return BigNumberEditor;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"default\"] = (BigNumberEditor);\n\n/***/ }),\n\n/***/ 1109:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}/**\n * Created by edeity on 2017/7/22.\n */var nonNegativeIntReg=/^\\d+$/;// 非负整数正则\nvar bigNumArrReg=/^(-?)(\\d*)(\\.?)(\\d*)$/;// 所有数值\nvar Infinity=function(){function Infinity(){_classCallCheck(this,Infinity);}_createClass(Infinity,[{key:'toString',value:function toString(){return\"Infinity\";}}]);return Infinity;}();var BigNumber=function(){function BigNumber(numStr){_classCallCheck(this,BigNumber);this.__value=null;numStr=(''+numStr).trim();// 将数值转为字符串\nthis.__value=numStr.match(bigNumArrReg);}// 该值为一个数组,第一个为原字符串, 第二个为正负值, 第三个为整数值, 第四个为小数点, 第五个为浮点值\n_createClass(BigNumber,[{key:'getValue',value:function getValue(){return this.__value;}},{key:'setValue',value:function setValue(val){this.__value=val;}// 整数部分\n},{key:'getIntValue',value:function getIntValue(){return this.__value[2]===''?'0':this.__value[2];}},{key:'setIntValue',value:function setIntValue(intArr){this.__value[2]=intArr;}// 浮点部分\n},{key:'getFloatValue',value:function getFloatValue(){return this.__value[4]===''?'0':this.__value[4];}},{key:'setFloatValue',value:function setFloatValue(floatArr){this.__value[4]=floatArr;}// 是否为整数\n},{key:'isPositive',value:function isPositive(){return!(this.__value[1]==='-');}},{key:'setPositive',value:function setPositive(isPositive){this.__value[1]=isPositive?'':'-';}},{key:'copy',value:function copy(){return new BigNumber(this.toString());}// 获取对应数值的字符串\n},{key:'toString',value:function toString(){if(this.getFloatValue()==='0'){this.valueStr=this.__value[1]+this.getIntValue();}else{this.valueStr=this.__value[1]+this.getIntValue()+'.'+this.getFloatValue();}return this.valueStr;}// 放大的倍数，以10为单位，若timesNum为负数，则缩小相应的倍数\n},{key:'times',value:function times(timesNum){var newNumber=new BigNumber(\"0\");var intNum=this.getIntValue().split('');var firFloatNum=this.getFloatValue().split('');if(timesNum>0){// 扩大\nfor(var i=0;i<timesNum;i++){var currFirFloatBit=firFloatNum.shift()||0;intNum.push(currFirFloatBit);}}else if(timesNum<0){// 缩小\ntimesNum=Math.abs(timesNum);for(var _i=0;_i<timesNum;_i++){var currFirIntBit=intNum.pop()||0;firFloatNum.unshift(currFirIntBit);}}// int:抹去高位为0的部分，eg：\"0001\"，得到的结果是 \"1\"\nfor(var _i2=0,firLen=intNum.length;_i2<firLen;_i2++){if(intNum[_i2]==='0'){intNum[_i2]='';}else{break;// 高位存在不为零的情况，中断后续\n}}newNumber.setIntValue(intNum.join(\"\"));newNumber.setFloatValue(firFloatNum.join(\"\"));newNumber.setPositive(this.isPositive());return newNumber;}// 放大一定倍数，使成为整数\n},{key:'_timesToInt',value:function _timesToInt(firNum,secNum,isMul){// 化小数位整数\nvar firIntStr=firNum.getIntValue().split('');var secIntStr=secNum.getIntValue().split('');var firFloatValue=firNum.getFloatValue();var secFloatValue=secNum.getFloatValue();var firFloatLength=firFloatValue===\"0\"?0:firFloatValue.length;var secFloatLength=secFloatValue===\"0\"?0:secFloatValue.length;var firFloatArr=firFloatValue.split(\"\");var secFloatArr=secFloatValue.split(\"\");var magnification=void 0;if(isMul){magnification=firFloatLength+secFloatLength;for(var i=0;i<firFloatLength;i++){firIntStr.push(firFloatArr[i]||'0');}for(var _i3=0;_i3<secFloatLength;_i3++){secIntStr.push(secFloatArr[_i3]||'0');}}else{magnification=firFloatLength>=secFloatLength?firFloatLength:secFloatLength;for(var _i4=0;_i4<magnification;_i4++){var tempFirValue=firFloatArr[_i4]||'0';var tempSecValue=secFloatArr[_i4]||'0';firIntStr.push(tempFirValue);secIntStr.push(tempSecValue);}// int:抹去高位为0的部分，eg：\"0001\"，得到的结果是 \"1\"\nfor(var _i5=0,firLen=firIntStr.length;_i5<firLen;_i5++){if(firIntStr[_i5]==='0'){firIntStr[_i5]='';}else{break;// 高位存在不为零的情况，中断后续\n}}for(var _i6=0,secLen=firIntStr.length;_i6<secLen;_i6++){if(secIntStr[_i6]==='0'){secIntStr[_i6]='';}else{break;// 高位存在不为零的情况，中断后续\n}}}return{firStr:firIntStr.join(''),secStr:secIntStr.join(''),magnification:magnification};}// 缩小一定倍数，使恢复从timesToInt的值\n},{key:'_timesToFloat',value:function _timesToFloat(numArray,magnification){var resultLen=numArray.length;var intPart=void 0;var floatPart=void 0;if(magnification<=numArray.length){intPart=numArray.slice(0,resultLen-magnification);floatPart=numArray.slice(resultLen-magnification,resultLen);}else{intPart=[];floatPart=numArray;for(var _i7=0,len=magnification-numArray.length;_i7<len;_i7++){floatPart.unshift('0');}}// int:抹去高位为0的部分，eg：\"0001\"，得到的结果是 \"1\"\nfor(var i=0,intLen=intPart.length;i<intLen;i++){if(intPart[i]==='0'||intPart[i]===0){intPart[i]='';}else{break;// 高位存在不为零的情况，中断后续\n}}// float:抹去低位为0的部分，eg：\"123.123000\"，得到的记过是\"123.123\"\nfor(var j=0,floatLen=floatPart.length;j<floatLen;j++){var currPos=floatLen-j-1;if(floatPart[currPos]==='0'||floatPart[currPos]===0){floatPart[currPos]='';}else{break;// 低位存在不为零的情况，中断后续\n}}return new BigNumber(intPart.join('')+'.'+floatPart.join(''));}},{key:'isZero',value:function isZero(){return this.isBigger(new BigNumber(\"0\"))===null;}// 比较两个数的大小, 假若相等,则返回null\n},{key:'isBigger',value:function isBigger(secBigNum){var firPositive=this.isPositive();secBigNum=secBigNum instanceof BigNumber?secBigNum:new BigNumber(secBigNum);var secPositive=secBigNum.isPositive();if(firPositive&&!secPositive){return true;}else if(!firPositive&&secPositive){return false;}else{var baseBigger=null;var firIntValue=this.getIntValue();var firFloatValue=this.getFloatValue();var secIntValue=secBigNum.getIntValue();var secFloatValue=secBigNum.getFloatValue();if(firIntValue.length>secIntValue.length){baseBigger=true;}else if(firIntValue.length<secIntValue.length){baseBigger=false;}else{var intLength=firIntValue.length;for(var i=0;i<intLength;i++){if(firIntValue[i]>secIntValue[i]){baseBigger=true;break;}else if(firIntValue[i]<secIntValue[i]){baseBigger=false;break;}}if(baseBigger===null){var floatLength=firFloatValue.length>secFloatValue.length?firFloatValue.length:secFloatValue.length;for(var _i8=0;_i8<floatLength;_i8++){if(firFloatValue[_i8]>secFloatValue[_i8]){baseBigger=true;break;}else if(firFloatValue[_i8]<secFloatValue[_i8]){baseBigger=false;break;}}}}if(firPositive){return baseBigger;}else{return!baseBigger;}}}},{key:'max',value:function max(firBigNum,secBigNum){return this.isBigger(firBigNum,secBigNum)?firBigNum:secBigNum;}},{key:'min',value:function min(firBigNum,secBigNum){return this.isBigger(firBigNum,secBigNum)?secBigNum:firBigNum;}// 供外界调用的加法\n},{key:'add',value:function add(numStr){// 负责BigNumber;\nvar copyFirNum=new BigNumber(this.toString());var copySecNum=numStr instanceof BigNumber?new BigNumber(numStr.toString()):new BigNumber(numStr);var result=null;if(copyFirNum.isPositive()){if(copySecNum.isPositive()){// 正数1 + 正数2\nresult=copyFirNum._baseAdd(copySecNum);}else{// 正数1 + 负数2 - > 正数1 - |负数2|\ncopySecNum.setPositive(true);result=copyFirNum._baseMinus(copySecNum);}}else{if(copySecNum.isPositive()){// 负数1 + 正数2 -> 正数2 - |负数1|\ncopyFirNum.setPositive(true);result=copySecNum._baseMinus(copyFirNum);}else{// 负数1 + 负数2 -> - (|负数1| + |负数2|)\ncopyFirNum.setPositive(true);copySecNum.setPositive(true);result=copyFirNum._baseAdd(copySecNum);result.setPositive(false);}}return result;}// 供外界调用的减法\n},{key:'minus',value:function minus(numStr){var copyFirNum=new BigNumber(this.toString());var copySecNum=numStr instanceof BigNumber?new BigNumber(numStr.toString()):new BigNumber(numStr);var result=null;if(copyFirNum.isPositive()){if(copySecNum.isPositive()){// 正数 - 正数\nresult=copyFirNum._baseMinus(copySecNum);}else{// 正数1 - 负数2 -> 正数1 + |负数2|\ncopySecNum.setPositive(true);result=copyFirNum._baseAdd(copySecNum);result.setPositive(true);}}else{if(copySecNum.isPositive()){// 负数1 - 正数2 -> - （正数2 - |负数1|）\ncopyFirNum.setPositive(true);result=copySecNum._baseAdd(copyFirNum);}else{// 负数1 - 负数2 -> |负数2| - |负数1|\ncopyFirNum.setPositive(true);copySecNum.setPositive(true);result=copySecNum._baseMinus(copyFirNum);}}return result;}// 供外界调用的乘法\n},{key:'multiply',value:function multiply(numStr){var secBigNum=numStr instanceof BigNumber?numStr:new BigNumber(numStr);var result=this._baseMultiply(secBigNum);result.setPositive(this.isPositive()===secBigNum.isPositive());// 符号相同即为正；\nreturn result;}// 供外界调用的除法\n},{key:'divide',value:function divide(numStr,leaveBit){var secBigNum=numStr instanceof BigNumber?numStr:new BigNumber(numStr);if(secBigNum.isZero()){return new Infinity();}else{this.setPositive(this.isPositive()===secBigNum.isPositive());var result=this._baseDivide(secBigNum,leaveBit);return result;}}// 两个正数的加法\n},{key:'_baseAdd',value:function _baseAdd(secBigNum){var timesResult=this._timesToInt(this,secBigNum);var firIntArr=timesResult.firStr.split('');var secIntArr=timesResult.secStr.split('');var magnification=timesResult.magnification;// 整数的加法\nvar resultIntArr=[];var firIntLength=firIntArr.length;var secIntLength=secIntArr.length;var isFirLead=firIntLength>=secIntLength;var shortLen=isFirLead?secIntLength:firIntLength;// 最短的长度，作为循环加的次数\nvar longLen=isFirLead?firIntLength:secIntLength;// 最长的长度\nvar longInrArr=isFirLead?firIntArr:secIntArr;var carryFlag=false;// 进位标志\n// 单字符串的相加\nfor(var i=0;i<shortLen;i++){var firChar=firIntArr[firIntLength-i-1];var secChar=secIntArr[secIntLength-i-1];var resultValue=parseInt(firChar,10)+parseInt(secChar,10);if(carryFlag){resultValue++;}// 处理结果是否仍存在进位情况\nif(resultValue>=10){resultValue-=10;carryFlag=true;}else{carryFlag=false;}resultIntArr.unshift(''+resultValue);}// 补位，存在后续进位的可能\nif(longLen>shortLen){for(var j=shortLen;j<longLen;j++){var currValue=carryFlag?parseInt(longInrArr[longLen-j-1],10)+1:parseInt(longInrArr[longLen-j-1],10);if(currValue>=10){currValue-=10;carryFlag=true;}else{carryFlag=false;}resultIntArr.unshift(''+currValue);}}// 补位完毕，仍然存在进位的情况\nif(carryFlag){resultIntArr.unshift(1);// 产生新的位,以1填充\n}// 还原\nreturn this._timesToFloat(resultIntArr,magnification);}// 两个正数的减法\n},{key:'_baseMinus',value:function _baseMinus(secBigNum){var timesResult=this._timesToInt(this,secBigNum);var firIntArr=timesResult.firStr.split('');var secIntArr=timesResult.secStr.split('');var magnification=timesResult.magnification;var oppositeFlag=false;// 正数的减法\nvar resultIntArr=[];var firIntLength=firIntArr.length;var secIntLength=secIntArr.length;var isFirLead=firIntLength>=secIntLength;var shortLen=isFirLead?secIntLength:firIntLength;// 最短的长度，作为循环加的次数\nvar longLen=isFirLead?firIntLength:secIntLength;// 最长的长度\nvar longInrArr=isFirLead?firIntArr:secIntArr;var abdicationFlag=false;// 退位标志\n// 假如减数大于被减数，则交换减数和被减数，oppositeFlag(证明结果为负)\nvar isBigger=this.isBigger(secBigNum);if(isBigger===null){// 相等,则直接返回\nreturn new BigNumber(\"0\");}else if(!this.isBigger(secBigNum)){var temp=firIntArr;firIntArr=secIntArr;secIntArr=temp;var tempLength=firIntLength;firIntLength=secIntLength;secIntLength=tempLength;oppositeFlag=true;}// 单字符串的相减\nfor(var i=0;i<shortLen;i++){var firChar=firIntArr[firIntLength-i-1];var secChar=secIntArr[secIntLength-i-1];var resultValue=parseInt(firChar,10)-parseInt(secChar,10);if(abdicationFlag){resultValue--;}// 处理结果是否仍存在进位情况\nif(resultValue<0){resultValue+=10;abdicationFlag=true;}else{abdicationFlag=false;}resultIntArr.unshift(''+resultValue);}// 补位，存在后续退位可能\nif(longLen>shortLen){for(var j=shortLen;j<longLen;j++){var currValue=abdicationFlag?parseInt(longInrArr[longLen-j-1],10)-1:parseInt(longInrArr[longLen-j-1],10);if(currValue<0){currValue+=10;abdicationFlag=true;}else{abdicationFlag=false;}resultIntArr.unshift(''+currValue);}}// 补位，两数值位数相等\nelse if(abdicationFlag){oppositeFlag=true;// 变成了负数\n}var result=this._timesToFloat(resultIntArr,magnification);// 还原\nif(oppositeFlag){result.setPositive(false);}return result;}// 两个正数的相乘\n},{key:'_baseMultiply',value:function _baseMultiply(secBigNum){var _this=this;var timesResult=this._timesToInt(this,secBigNum,true);var firIntArr=timesResult.firStr.split('');var secIntArr=timesResult.secStr.split('');var magnification=timesResult.magnification;// 每次用被乘数 * 1位数\nvar tempResultArray=[];var magnificationNum=0;firIntArr=firIntArr.reverse();secIntArr=secIntArr.reverse();secIntArr.forEach(function(oneBitNum){tempResultArray.push(_this._baseOneBitMultiply(firIntArr,oneBitNum,magnificationNum));magnificationNum++;});// 累加每次计算的结果\nvar realResult=new BigNumber(\"0\");tempResultArray.forEach(function(tempResult){realResult=realResult.add(tempResult);});// 得到最终结果\nreturn this._timesToFloat(realResult.toString().split(\"\"),magnification);}// 一个大正整数和一个一位正数的乘法\n},{key:'_baseOneBitMultiply',value:function _baseOneBitMultiply(bigNumArray,oneBitNum,timesNum){var oneSecBitNum=parseInt(oneBitNum,10);var carryNum=0;var resultArray=[];bigNumArray.forEach(function(oneFirBitNum){var currNum=parseInt(oneFirBitNum,10)*oneSecBitNum+carryNum;carryNum=Math.floor(currNum/10);resultArray.unshift(currNum%10);});if(carryNum){resultArray.unshift(carryNum);}for(var i=0;i<timesNum;i++){resultArray.push(\"0\");}return resultArray.join(\"\");}// 两个正数除\n},{key:'_baseDivide',value:function _baseDivide(secBigNum,leaveBit){// 预处理\nvar timesValue=-1;var tempNum=new BigNumber(this.toString());while(tempNum.isBigger(secBigNum)===true){timesValue--;tempNum=tempNum.times(-1);}// 正式运算\nleaveBit=leaveBit||16;// 默认保留的位数\nvar resultArray=[];// 存储结果的集\nvar isDivides=false;// 是否已经被除尽\nfor(var i=0;i<leaveBit;i++){for(var j=0;j<10;j++){tempNum=tempNum.minus(secBigNum);// 当发现不再是正数，证明不可再减\nif(tempNum.toString()===\"0\"){resultArray.push(j+1);isDivides=true;break;}else if(!tempNum.isPositive()){resultArray.push(j);tempNum=tempNum.add(secBigNum);tempNum=tempNum.times(1);// 扩大10倍\ntimesValue++;break;}}if(isDivides){timesValue=timesValue+1;break;}}return this._timesToFloat(resultArray,timesValue);}},{key:'isValid',value:function isValid(){return this.__value&&this._isValidNumStr(this.__value[0]);}},{key:'_isValidNumStr',value:function _isValidNumStr(numStr){var numArray=numStr.match(bigNumArrReg);return numArray&&numArray.length===5&&(numArray[1]===''||numArray[1]==='-')&&(numArray[2]===''||nonNegativeIntReg.test(numArray[2]))&&(numArray[3]===''||numArray[3]==='.')&&(numArray[4]===''||nonNegativeIntReg.test(numArray[4]));}}]);return BigNumber;}();/* harmony default export */ __webpack_exports__[\"a\"] = (BigNumber);\n\n/***/ }),\n\n/***/ 1110:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__BigNumberEditor_css__ = __webpack_require__(1111);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__BigNumberEditor_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__BigNumberEditor_css__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**\n * Created by edeity on 2018/1/31.\n */var BigNumberEditorBlock=function(_Component){_inherits(BigNumberEditorBlock,_Component);function BigNumberEditorBlock(props){_classCallCheck(this,BigNumberEditorBlock);var _this=_possibleConstructorReturn(this,(BigNumberEditorBlock.__proto__||Object.getPrototypeOf(BigNumberEditorBlock)).call(this,props));_this.onChange=function(){var value=_this.refs.input.value;_this.setState({value:value});_this.props.onChange(value,_this.props.index);};_this.state={value:_this.props.value};return _this;}_createClass(BigNumberEditorBlock,[{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input',{className:'input-block',ref:'input',defaultValue:this.state.value,onChange:this.onChange,onBlur:this.onBlur});}}]);return BigNumberEditorBlock;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (BigNumberEditorBlock);\n\n/***/ }),\n\n/***/ 1111:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1112);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(873)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../node_modules/postcss-loader/lib/index.js??postcss!./BigNumberEditor.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../node_modules/postcss-loader/lib/index.js??postcss!./BigNumberEditor.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n\n/***/ 1112:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(872)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".editor .input-block{width:100px;display:inline-block;outline:none;min-width:20px;padding:10px 0;margin:10px;font-size:15px;text-align:center}.editor .input-block:first-child{margin-left:0}.editor .result{font-size:20px}.editor .result .desc{font-size:15px}\", \"\", {\"version\":3,\"sources\":[\"/Users/edeity/Documents/bill/src/Hera/comp/bigNumber/BigNumberEditor.css\"],\"names\":[],\"mappings\":\"AAAA,qBACE,YAAa,AACb,qBAAsB,AACtB,aAAc,AACd,eAAgB,AAChB,eAAgB,AAChB,YAAa,AACb,eAAgB,AAChB,iBAAmB,CAAE,AACrB,iCACE,aAAe,CAAE,AAErB,gBACE,cAAgB,CAAE,AAClB,sBACE,cAAgB,CAAE\",\"file\":\"BigNumberEditor.css\",\"sourcesContent\":[\".editor .input-block {\\n  width: 100px;\\n  display: inline-block;\\n  outline: none;\\n  min-width: 20px;\\n  padding: 10px 0;\\n  margin: 10px;\\n  font-size: 15px;\\n  text-align: center; }\\n  .editor .input-block:first-child {\\n    margin-left: 0; }\\n\\n.editor .result {\\n  font-size: 20px; }\\n  .editor .result .desc {\\n    font-size: 15px; }\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/3.eaec9b9c.chunk.js","/**\n * Created by edeity on 2018/1/31.\n */\n\nimport React, {Component} from 'react';\nimport BigNumber from './BigNumber';\nimport BigNumberBlock from './BigNumberBlock'\n\nclass BigNumberEditor extends Component {\n    constructor() {\n        super();\n        this.state = {\n            calStore: ['0.1', '+', '0.2']\n        }\n    }\n\n    getBlockRender() {\n        let blockRender = [];\n        let self = this;\n        this.state.calStore.forEach(function (eachBlockData, index) {\n            blockRender.push(\n                <BigNumberBlock key={index} index={index} value={eachBlockData}\n                                onChange={function(value, index) {\n                                    let calStore = self.state.calStore;\n                                    calStore[index] = value;\n                                    self.setState({\n                                        calStore: calStore\n                                    })}\n                                }/>);\n        });\n        return blockRender;\n    }\n\n    getResult() {\n        let calStore = this.state.calStore;\n        let firNumStr = calStore[0];\n        let symbol = calStore[1];\n        let secNumStr = calStore[2];\n        let firNum = new BigNumber(firNumStr);\n        let secNum = new BigNumber(secNumStr);\n        if(firNum.isValid() && secNum.isValid()) {\n            switch(symbol) {\n                case '+':\n                    return firNum.add(secNum).toString();\n                case '-':\n                    return firNum.minus(secNum).toString();\n                case '*':\n                    return firNum.multiply(secNum).toString();\n                case '/':\n                    return firNum.divide(secNum).toString();\n                default:\n                    return '未知运算符号'\n            }   \n        } else {\n            return \"不是合法的数值\";\n        }\n    }\n\n    getJsResult() {\n        let calStore = this.state.calStore;\n        let firNumStr = calStore[0];\n        let symbol = calStore[1];\n        let secNumStr = calStore[2];\n        let firNum = parseFloat(firNumStr);\n        let secNum = parseFloat(secNumStr);\n        switch(symbol) {\n            case '+':\n                return firNum + secNum;\n            case '-':\n                return firNum - secNum;\n            case '*':\n                return firNum * secNum;\n            case '/':\n                return firNum / secNum;\n            default:\n                return '未知运算符号，仅支持 +（加）、-（减）、*（乘）、/（除）'\n        }\n    }\n\n    render() {\n        return (\n                <div className=\"editor\">\n                    {this.getBlockRender()}\n                    <div className=\"result\">\n                        <span className=\"desc\">类库</span>\n                        <span className=\"symbol\">=</span> {this.getResult()} </div>\n                    <div className=\"result\">\n                        <span className=\"desc\">原生</span>\n                        <span className=\"symbol\">=</span> {this.getJsResult()}</div>\n                </div>\n            )\n\n    }\n}\n\nexport default BigNumberEditor;\n\n\n// WEBPACK FOOTER //\n// ./src/Hera/comp/bigNumber/BigNumberEditor.js","/**\n * Created by edeity on 2017/7/22.\n */\n\nconst nonNegativeIntReg = /^\\d+$/; // 非负整数正则\nconst bigNumArrReg = /^(-?)(\\d*)(\\.?)(\\d*)$/; // 所有数值\n\nclass Infinity {\n    toString() {\n        return \"Infinity\";\n    }\n}\n\nclass BigNumber {\n    // 该值为一个数组,第一个为原字符串, 第二个为正负值, 第三个为整数值, 第四个为小数点, 第五个为浮点值\n    __value = null;\n\n    constructor(numStr) {\n        numStr = ('' + numStr).trim(); // 将数值转为字符串\n        this.__value = numStr.match(bigNumArrReg);\n    }\n\n    getValue() {\n        return this.__value\n    }\n    setValue (val) {\n        this.__value = val;\n    }\n    // 整数部分\n    getIntValue() {\n        return this.__value[2] === '' ? '0' : this.__value[2];\n    }\n    setIntValue(intArr) {\n        this.__value[2] = intArr;\n    }\n    // 浮点部分\n    getFloatValue() {\n        return this.__value[4] === '' ? '0' : this.__value[4];\n    }\n    setFloatValue(floatArr) {\n        this.__value[4] = floatArr;\n    }\n    // 是否为整数\n    isPositive() {\n        return !(this.__value[1] === '-');\n    }\n    setPositive(isPositive) {\n        this.__value[1] = isPositive ? '' : '-';\n    }\n    copy() {\n        return new BigNumber(this.toString());\n    }\n    // 获取对应数值的字符串\n    toString() {\n        if (this.getFloatValue() === '0') {\n            this.valueStr =  this.__value[1] + this.getIntValue();\n        } else {\n            this.valueStr = this.__value[1] + this.getIntValue() + '.' + this.getFloatValue();\n        }\n        return this.valueStr;\n    }\n    // 放大的倍数，以10为单位，若timesNum为负数，则缩小相应的倍数\n    times(timesNum) {\n        let newNumber = new BigNumber(\"0\");\n        let intNum = this.getIntValue().split('');\n        let firFloatNum = this.getFloatValue().split('');\n        if(timesNum > 0) {\n            // 扩大\n            for(let i=0; i<timesNum; i++) {\n                let currFirFloatBit = firFloatNum.shift() || 0;\n                intNum.push(currFirFloatBit);\n            }\n        } else if(timesNum < 0) {\n            // 缩小\n            timesNum = Math.abs(timesNum);\n            for(let i=0; i<timesNum; i++) {\n                let currFirIntBit = intNum.pop() || 0;\n                firFloatNum.unshift(currFirIntBit);\n            }\n        }\n        // int:抹去高位为0的部分，eg：\"0001\"，得到的结果是 \"1\"\n        for (let i = 0, firLen = intNum.length; i < firLen; i++) {\n            if (intNum[i] === '0') {\n                intNum[i] = '';\n            } else {\n                break; // 高位存在不为零的情况，中断后续\n            }\n        }\n        newNumber.setIntValue(intNum.join(\"\"));\n        newNumber.setFloatValue(firFloatNum.join(\"\"));\n        newNumber.setPositive(this.isPositive());\n        return newNumber;\n    }\n    // 放大一定倍数，使成为整数\n    _timesToInt(firNum, secNum, isMul) {\n        // 化小数位整数\n        let firIntStr = firNum.getIntValue().split('');\n        let secIntStr = secNum.getIntValue().split('');\n        let firFloatValue = firNum.getFloatValue();\n        let secFloatValue = secNum.getFloatValue();\n        let firFloatLength = firFloatValue === \"0\" ? 0 : firFloatValue.length;\n        let secFloatLength = secFloatValue === \"0\" ? 0 :secFloatValue.length;\n        let firFloatArr = firFloatValue.split(\"\");\n        let secFloatArr = secFloatValue.split(\"\");\n        let magnification;\n        if(isMul) {\n            magnification = firFloatLength + secFloatLength;\n            for(let i=0; i<firFloatLength; i++) {\n                firIntStr.push(firFloatArr[i] || '0');\n            }\n            for(let i=0; i<secFloatLength; i++) {\n                secIntStr.push(secFloatArr[i] || '0');\n            }\n        } else {\n            magnification = firFloatLength >= secFloatLength ? firFloatLength : secFloatLength;\n            for (let i = 0; i < magnification; i++) {\n                let tempFirValue = firFloatArr[i] || '0';\n                let tempSecValue = secFloatArr[i] || '0';\n                firIntStr.push(tempFirValue);\n                secIntStr.push(tempSecValue);\n            }\n            // int:抹去高位为0的部分，eg：\"0001\"，得到的结果是 \"1\"\n            for (let i = 0, firLen = firIntStr.length; i < firLen; i++) {\n                if (firIntStr[i] === '0') {\n                    firIntStr[i] = '';\n                } else {\n                    break; // 高位存在不为零的情况，中断后续\n                }\n            }\n            for (let i = 0, secLen = firIntStr.length; i < secLen; i++) {\n                if (secIntStr[i] === '0') {\n                    secIntStr[i] = '';\n                } else {\n                    break; // 高位存在不为零的情况，中断后续\n                }\n            }\n        }\n\n        return {\n            firStr: firIntStr.join(''),\n            secStr: secIntStr.join(''),\n            magnification: magnification\n        }\n    }\n    // 缩小一定倍数，使恢复从timesToInt的值\n    _timesToFloat(numArray, magnification) {\n        let resultLen = numArray.length;\n        let intPart;\n        let floatPart;\n        if(magnification <= numArray.length) {\n            intPart = numArray.slice(0, resultLen - magnification);\n            floatPart = numArray.slice(resultLen - magnification, resultLen);\n        } else {\n            intPart = [];\n            floatPart = numArray;\n            for(let i=0, len=magnification-numArray.length; i<len; i++) {\n                floatPart.unshift('0');\n            }\n        }\n        // int:抹去高位为0的部分，eg：\"0001\"，得到的结果是 \"1\"\n        for (var i = 0, intLen = intPart.length; i < intLen; i++) {\n            if (intPart[i] === '0' || intPart[i] === 0) {\n                intPart[i] = '';\n            } else {\n                break; // 高位存在不为零的情况，中断后续\n            }\n        }\n        // float:抹去低位为0的部分，eg：\"123.123000\"，得到的记过是\"123.123\"\n        for (var j = 0, floatLen = floatPart.length; j < floatLen; j++) {\n            let currPos = floatLen - j - 1;\n            if (floatPart[currPos] === '0' || floatPart[currPos] === 0) {\n                floatPart[currPos] = ''\n            } else {\n                break; // 低位存在不为零的情况，中断后续\n            }\n        }\n        return new BigNumber(intPart.join('') + '.' + floatPart.join(''));\n    }\n    isZero() {\n        return this.isBigger(new BigNumber(\"0\")) === null;\n    }\n    // 比较两个数的大小, 假若相等,则返回null\n    isBigger(secBigNum) {\n        let firPositive = this.isPositive();\n        secBigNum = secBigNum instanceof BigNumber ? secBigNum : new BigNumber(secBigNum);\n        let secPositive = secBigNum.isPositive();\n        if(firPositive && !secPositive) {\n            return true;\n        } else if(!firPositive && secPositive) {\n            return false;\n        } else {\n            let baseBigger = null;\n            let firIntValue = this.getIntValue();\n            let firFloatValue = this.getFloatValue();\n            let secIntValue = secBigNum.getIntValue();\n            let secFloatValue = secBigNum.getFloatValue();\n            if(firIntValue.length > secIntValue.length) {\n                baseBigger = true;\n            } else if(firIntValue.length < secIntValue.length) {\n                baseBigger = false;\n            } else {\n                let intLength = firIntValue.length;\n                for(let i=0; i<intLength; i++) {\n                    if(firIntValue[i] > secIntValue[i]) {\n                        baseBigger = true;\n                        break;\n                    } else if(firIntValue[i] < secIntValue[i]) {\n                        baseBigger = false;\n                        break;\n                    }\n                }\n                if(baseBigger === null) {\n                    let floatLength = firFloatValue.length > secFloatValue.length\n                        ? firFloatValue.length\n                        : secFloatValue.length;\n                    for(let i=0; i<floatLength; i++) {\n                        if(firFloatValue[i] > secFloatValue[i]) {\n                            baseBigger = true;\n                            break;\n                        } else if(firFloatValue[i] < secFloatValue[i]) {\n                            baseBigger = false;\n                            break;\n                        }\n                    }\n                }\n            }\n            if(firPositive) {\n                return baseBigger;\n            }else {\n                return !baseBigger;\n            }\n        }\n    }\n    max(firBigNum, secBigNum) {\n        return this.isBigger(firBigNum, secBigNum) ? firBigNum : secBigNum;\n    }\n    min(firBigNum, secBigNum) {\n        return this.isBigger(firBigNum, secBigNum) ? secBigNum : firBigNum;\n    }\n    // 供外界调用的加法\n    add(numStr) {\n        // 负责BigNumber;\n        let copyFirNum = new BigNumber(this.toString());\n        let copySecNum = numStr instanceof BigNumber\n            ? new BigNumber(numStr.toString())\n            : new BigNumber(numStr);\n        let result = null;\n        if (copyFirNum.isPositive()) {\n            if (copySecNum.isPositive()) {\n                // 正数1 + 正数2\n                result = copyFirNum._baseAdd(copySecNum);\n            } else {\n                // 正数1 + 负数2 - > 正数1 - |负数2|\n                copySecNum.setPositive(true);\n                result = copyFirNum._baseMinus(copySecNum);\n            }\n        } else {\n            if (copySecNum.isPositive()) {\n                // 负数1 + 正数2 -> 正数2 - |负数1|\n                copyFirNum.setPositive(true);\n                result = copySecNum._baseMinus(copyFirNum);\n            } else {\n                // 负数1 + 负数2 -> - (|负数1| + |负数2|)\n                copyFirNum.setPositive(true);\n                copySecNum.setPositive(true);\n                result = copyFirNum._baseAdd(copySecNum);\n                result.setPositive(false);\n            }\n        }\n        return result;\n    }\n    // 供外界调用的减法\n    minus(numStr) {\n        let copyFirNum = new BigNumber(this.toString());\n        let copySecNum = numStr instanceof BigNumber\n            ? new BigNumber(numStr.toString())\n            : new BigNumber(numStr);\n        let result = null;\n        if (copyFirNum.isPositive()) {\n            if (copySecNum.isPositive()) {\n                // 正数 - 正数\n                result = copyFirNum._baseMinus(copySecNum);\n            } else {\n                // 正数1 - 负数2 -> 正数1 + |负数2|\n                copySecNum.setPositive(true);\n                result =  copyFirNum._baseAdd(copySecNum);\n                result.setPositive(true);\n            }\n        } else {\n            if (copySecNum.isPositive()) {\n                // 负数1 - 正数2 -> - （正数2 - |负数1|）\n                copyFirNum.setPositive(true);\n                result = copySecNum._baseAdd(copyFirNum);\n            } else {\n                // 负数1 - 负数2 -> |负数2| - |负数1|\n                copyFirNum.setPositive(true);\n                copySecNum.setPositive(true);\n                result = copySecNum._baseMinus(copyFirNum);\n\n            }\n        }\n        return result;\n    }\n    // 供外界调用的乘法\n    multiply(numStr) {\n        let secBigNum = numStr instanceof BigNumber ? numStr :new BigNumber(numStr);\n        let result = this._baseMultiply(secBigNum);\n        result.setPositive(this.isPositive() === secBigNum.isPositive()); // 符号相同即为正；\n        return result;\n    }\n    // 供外界调用的除法\n    divide(numStr, leaveBit) {\n        let secBigNum = numStr instanceof BigNumber ? numStr : new BigNumber(numStr);\n        if(secBigNum.isZero()) {\n            return new Infinity();\n        } else {\n            this.setPositive(this.isPositive() === secBigNum.isPositive());\n            let result = this._baseDivide(secBigNum, leaveBit);\n            return result;\n        }\n    }\n    // 两个正数的加法\n    _baseAdd(secBigNum) {\n        let timesResult = this._timesToInt(this, secBigNum);\n        let firIntArr = timesResult.firStr.split('');\n        let secIntArr = timesResult.secStr.split('');\n        let magnification = timesResult.magnification;\n\n\n        // 整数的加法\n        let resultIntArr = [];\n        let firIntLength = firIntArr.length;\n        let secIntLength = secIntArr.length;\n        let isFirLead = firIntLength >= secIntLength;\n        let shortLen = isFirLead ? secIntLength : firIntLength; // 最短的长度，作为循环加的次数\n        let longLen = isFirLead ? firIntLength : secIntLength; // 最长的长度\n        let longInrArr = isFirLead ? firIntArr : secIntArr;\n        let carryFlag = false; // 进位标志\n\n        // 单字符串的相加\n        for (let i = 0; i < shortLen; i++) {\n            let firChar = firIntArr[firIntLength - i - 1];\n            let secChar = secIntArr[secIntLength - i - 1];\n            let resultValue = parseInt(firChar, 10) + parseInt(secChar, 10);\n            if (carryFlag) {\n                resultValue++;\n            }\n            // 处理结果是否仍存在进位情况\n            if (resultValue >= 10) {\n                resultValue -= 10;\n                carryFlag = true;\n            } else {\n                carryFlag = false;\n            }\n            resultIntArr.unshift('' + resultValue);\n        }\n\n        // 补位，存在后续进位的可能\n        if (longLen > shortLen) {\n            for (let j = shortLen; j < longLen; j++) {\n                let currValue = carryFlag\n                    ? parseInt(longInrArr[longLen - j - 1], 10) + 1\n                    : parseInt(longInrArr[longLen - j - 1], 10);\n                if (currValue >= 10) {\n                    currValue -= 10;\n                    carryFlag = true;\n                } else {\n                    carryFlag = false;\n                }\n                resultIntArr.unshift('' + currValue);\n            }\n        }\n\n        // 补位完毕，仍然存在进位的情况\n        if (carryFlag) {\n            resultIntArr.unshift(1); // 产生新的位,以1填充\n        }\n\n        // 还原\n        return this._timesToFloat(resultIntArr, magnification);\n    }\n    // 两个正数的减法\n    _baseMinus(secBigNum) {\n        let timesResult = this._timesToInt(this, secBigNum);\n        let firIntArr = timesResult.firStr.split('');\n        let secIntArr = timesResult.secStr.split('');\n        let magnification = timesResult.magnification;\n        let oppositeFlag = false;\n\n        // 正数的减法\n        let resultIntArr = [];\n        let firIntLength = firIntArr.length;\n        let secIntLength = secIntArr.length;\n        let isFirLead = firIntLength >= secIntLength;\n        let shortLen = isFirLead ? secIntLength : firIntLength; // 最短的长度，作为循环加的次数\n        let longLen = isFirLead ? firIntLength : secIntLength; // 最长的长度\n        let longInrArr = isFirLead ? firIntArr : secIntArr;\n        let abdicationFlag = false; // 退位标志\n\n\n        // 假如减数大于被减数，则交换减数和被减数，oppositeFlag(证明结果为负)\n        let isBigger = this.isBigger(secBigNum);\n        if(isBigger === null) {\n            // 相等,则直接返回\n            return new BigNumber(\"0\");\n        } else if (!this.isBigger(secBigNum)) {\n            let temp = firIntArr;\n            firIntArr = secIntArr;\n            secIntArr = temp;\n            let tempLength = firIntLength;\n            firIntLength = secIntLength;\n            secIntLength = tempLength;\n            oppositeFlag = true;\n        }\n\n        // 单字符串的相减\n        for (let i = 0; i < shortLen; i++) {\n            let firChar = firIntArr[firIntLength - i - 1];\n            let secChar = secIntArr[secIntLength - i - 1];\n            let resultValue = parseInt(firChar, 10) - parseInt(secChar, 10);\n            if (abdicationFlag) {\n                resultValue--;\n            }\n            // 处理结果是否仍存在进位情况\n            if (resultValue < 0) {\n                resultValue += 10;\n                abdicationFlag = true;\n            } else {\n                abdicationFlag = false;\n            }\n            resultIntArr.unshift('' + resultValue);\n        }\n\n        // 补位，存在后续退位可能\n        if (longLen > shortLen) {\n            for (let j = shortLen; j < longLen; j++) {\n                let currValue = abdicationFlag\n                    ? parseInt(longInrArr[longLen - j - 1], 10) - 1\n                    : parseInt(longInrArr[longLen - j - 1], 10);\n                if (currValue < 0) {\n                    currValue += 10;\n                    abdicationFlag = true;\n                } else {\n                    abdicationFlag = false;\n                }\n                resultIntArr.unshift('' + currValue);\n            }\n        }\n        // 补位，两数值位数相等\n        else if (abdicationFlag) {\n            oppositeFlag = true; // 变成了负数\n        }\n\n\n        let result = this._timesToFloat(resultIntArr, magnification);\n        // 还原\n        if (oppositeFlag) {\n            result.setPositive(false);\n        }\n        return result;\n    }\n    // 两个正数的相乘\n    _baseMultiply(secBigNum) {\n        let timesResult = this._timesToInt(this, secBigNum, true);\n        let firIntArr = timesResult.firStr.split('');\n        let secIntArr = timesResult.secStr.split('');\n        let magnification = timesResult.magnification;\n\n        // 每次用被乘数 * 1位数\n        let tempResultArray = [];\n        let magnificationNum = 0;\n        firIntArr = firIntArr.reverse();\n        secIntArr = secIntArr.reverse();\n        secIntArr.forEach((oneBitNum) => {\n            tempResultArray.push(this._baseOneBitMultiply(firIntArr, oneBitNum, magnificationNum));\n            magnificationNum++;\n        });\n\n        // 累加每次计算的结果\n        let realResult = new BigNumber(\"0\");\n        tempResultArray.forEach(function (tempResult) {\n            realResult = realResult.add(tempResult);\n        });\n\n        // 得到最终结果\n        return this._timesToFloat(realResult.toString().split(\"\"), magnification);\n    }\n    // 一个大正整数和一个一位正数的乘法\n    _baseOneBitMultiply(bigNumArray, oneBitNum, timesNum) {\n        var oneSecBitNum = parseInt(oneBitNum, 10);\n        let carryNum = 0;\n        let resultArray = [];\n        bigNumArray.forEach(function (oneFirBitNum) {\n            let currNum = parseInt(oneFirBitNum, 10) * oneSecBitNum + carryNum;\n            carryNum = Math.floor(currNum / 10);\n            resultArray.unshift(currNum % 10);\n        });\n\n        if(carryNum) {\n            resultArray.unshift(carryNum);\n        }\n\n        for(let i=0; i<timesNum; i++) {\n            resultArray.push(\"0\");\n        }\n        return resultArray.join(\"\");\n    }\n    // 两个正数除\n    _baseDivide(secBigNum, leaveBit) {\n        // 预处理\n        let timesValue = -1;\n        let tempNum = new BigNumber(this.toString());\n        while(tempNum.isBigger(secBigNum) === true) {\n            timesValue--;\n            tempNum = tempNum.times(-1);\n        }\n        // 正式运算\n        leaveBit = leaveBit || 16; // 默认保留的位数\n        let resultArray = []; // 存储结果的集\n        let isDivides = false; // 是否已经被除尽\n        for(let i=0; i<leaveBit; i++) {\n            for(let j=0; j<10; j++) {\n                tempNum = tempNum.minus(secBigNum);\n                // 当发现不再是正数，证明不可再减\n                if(tempNum.toString() === \"0\") {\n                    resultArray.push(j + 1);\n                    isDivides = true;\n                    break;\n                } else if(!tempNum.isPositive()) {\n                    resultArray.push(j);\n                    tempNum = tempNum.add(secBigNum);\n                    tempNum = tempNum.times(1); // 扩大10倍\n                    timesValue++;\n                    break;\n                }\n            }\n            if(isDivides) {\n                timesValue = timesValue + 1;\n                break;\n            }\n        }\n        return this._timesToFloat(resultArray, timesValue);\n    }\n    isValid() {\n        return this.__value && this._isValidNumStr(this.__value[0]);\n    }\n    _isValidNumStr(numStr) {\n        let numArray = numStr.match(bigNumArrReg);\n        return numArray && numArray.length === 5 &&\n            (numArray[1] === '' || numArray[1] === '-') &&\n            (numArray[2] === '' || nonNegativeIntReg.test(numArray[2])) &&\n            (numArray[3] === '' || numArray[3] === '.') &&\n            (numArray[4] === '' || nonNegativeIntReg.test(numArray[4]));\n    }\n}\n\nexport default BigNumber;\n\n\n// WEBPACK FOOTER //\n// ./src/Hera/comp/bigNumber/BigNumber.js","/**\n * Created by edeity on 2018/1/31.\n */\n\n\nimport React, {Component} from 'react';\nimport './BigNumberEditor.css';\n\nclass BigNumberEditorBlock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: this.props.value\n        }\n    }\n\n    onChange = () => {\n        let value = this.refs.input.value;\n        this.setState({\n            value: value\n        })\n        this.props.onChange(value, this.props.index);\n    };\n\n    render() {\n        return (\n            <input className=\"input-block\"\n                 ref=\"input\"\n                 defaultValue={this.state.value}\n                 onChange={this.onChange}\n                 onBlur={this.onBlur}/>\n        )\n\n    }\n}\n\nexport default BigNumberEditorBlock;\n\n\n// WEBPACK FOOTER //\n// ./src/Hera/comp/bigNumber/BigNumberBlock.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../node_modules/postcss-loader/lib/index.js??postcss!./BigNumberEditor.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../node_modules/postcss-loader/lib/index.js??postcss!./BigNumberEditor.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js??ref--1-oneOf-2-2!../../../../node_modules/postcss-loader/lib/index.js??postcss!./BigNumberEditor.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Hera/comp/bigNumber/BigNumberEditor.css\n// module id = 1111\n// module chunks = 3","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".editor .input-block{width:100px;display:inline-block;outline:none;min-width:20px;padding:10px 0;margin:10px;font-size:15px;text-align:center}.editor .input-block:first-child{margin-left:0}.editor .result{font-size:20px}.editor .result .desc{font-size:15px}\", \"\", {\"version\":3,\"sources\":[\"/Users/edeity/Documents/bill/src/Hera/comp/bigNumber/BigNumberEditor.css\"],\"names\":[],\"mappings\":\"AAAA,qBACE,YAAa,AACb,qBAAsB,AACtB,aAAc,AACd,eAAgB,AAChB,eAAgB,AAChB,YAAa,AACb,eAAgB,AAChB,iBAAmB,CAAE,AACrB,iCACE,aAAe,CAAE,AAErB,gBACE,cAAgB,CAAE,AAClB,sBACE,cAAgB,CAAE\",\"file\":\"BigNumberEditor.css\",\"sourcesContent\":[\".editor .input-block {\\n  width: 100px;\\n  display: inline-block;\\n  outline: none;\\n  min-width: 20px;\\n  padding: 10px 0;\\n  margin: 10px;\\n  font-size: 15px;\\n  text-align: center; }\\n  .editor .input-block:first-child {\\n    margin-left: 0; }\\n\\n.editor .result {\\n  font-size: 20px; }\\n  .editor .result .desc {\\n    font-size: 15px; }\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"importLoaders\":1,\"minimize\":true,\"sourceMap\":true}!./node_modules/postcss-loader/lib?{\"ident\":\"postcss\",\"plugins\":[null,null]}!./src/Hera/comp/bigNumber/BigNumberEditor.css\n// module id = 1112\n// module chunks = 3"],"sourceRoot":""}